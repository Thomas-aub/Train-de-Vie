{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = void 0;\n\nvar buffer_writer_1 = require(\"./buffer-writer\");\n\nvar writer = new buffer_writer_1.Writer();\n\nvar startup = function startup(opts) {\n  // protocol version\n  writer.addInt16(3).addInt16(0);\n\n  for (var _i = 0, _Object$keys = Object.keys(opts); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    writer.addCString(key).addCString(opts[key]);\n  }\n\n  writer.addCString('client_encoding').addCString('UTF8');\n  var bodyBuffer = writer.addCString('').flush(); // this message is sent without a code\n\n  var length = bodyBuffer.length + 4;\n  return new buffer_writer_1.Writer().addInt32(length).add(bodyBuffer).flush();\n};\n\nvar requestSsl = function requestSsl() {\n  var response = Buffer.allocUnsafe(8);\n  response.writeInt32BE(8, 0);\n  response.writeInt32BE(80877103, 4);\n  return response;\n};\n\nvar password = function password(_password) {\n  return writer.addCString(_password).flush(112\n  /* startup */\n  );\n};\n\nvar sendSASLInitialResponseMessage = function sendSASLInitialResponseMessage(mechanism, initialResponse) {\n  // 0x70 = 'p'\n  writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse);\n  return writer.flush(112\n  /* startup */\n  );\n};\n\nvar sendSCRAMClientFinalMessage = function sendSCRAMClientFinalMessage(additionalData) {\n  return writer.addString(additionalData).flush(112\n  /* startup */\n  );\n};\n\nvar query = function query(text) {\n  return writer.addCString(text).flush(81\n  /* query */\n  );\n};\n\nvar emptyArray = [];\n\nvar parse = function parse(query) {\n  // expect something like this:\n  // { name: 'queryName',\n  //   text: 'select * from blah',\n  //   types: ['int8', 'bool'] }\n  // normalize missing query names to allow for null\n  var name = query.name || '';\n\n  if (name.length > 63) {\n    /* eslint-disable no-console */\n    console.error('Warning! Postgres only supports 63 characters for query names.');\n    console.error('You supplied %s (%s)', name, name.length);\n    console.error('This can cause conflicts and silent errors executing queries');\n    /* eslint-enable no-console */\n  }\n\n  var types = query.types || emptyArray;\n  var len = types.length;\n  var buffer = writer.addCString(name) // name of query\n  .addCString(query.text) // actual query text\n  .addInt16(len);\n\n  for (var i = 0; i < len; i++) {\n    buffer.addInt32(types[i]);\n  }\n\n  return writer.flush(80\n  /* parse */\n  );\n};\n\nvar paramWriter = new buffer_writer_1.Writer();\n\nvar writeValues = function writeValues(values, valueMapper) {\n  for (var i = 0; i < values.length; i++) {\n    var mappedVal = valueMapper ? valueMapper(values[i], i) : values[i];\n\n    if (mappedVal == null) {\n      // add the param type (string) to the writer\n      writer.addInt16(0\n      /* STRING */\n      ); // write -1 to the param writer to indicate null\n\n      paramWriter.addInt32(-1);\n    } else if (mappedVal instanceof Buffer) {\n      // add the param type (binary) to the writer\n      writer.addInt16(1\n      /* BINARY */\n      ); // add the buffer to the param writer\n\n      paramWriter.addInt32(mappedVal.length);\n      paramWriter.add(mappedVal);\n    } else {\n      // add the param type (string) to the writer\n      writer.addInt16(0\n      /* STRING */\n      );\n      paramWriter.addInt32(Buffer.byteLength(mappedVal));\n      paramWriter.addString(mappedVal);\n    }\n  }\n};\n\nvar bind = function bind() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // normalize config\n  var portal = config.portal || '';\n  var statement = config.statement || '';\n  var binary = config.binary || false;\n  var values = config.values || emptyArray;\n  var len = values.length;\n  writer.addCString(portal).addCString(statement);\n  writer.addInt16(len);\n  writeValues(values, config.valueMapper);\n  writer.addInt16(len);\n  writer.add(paramWriter.flush()); // format code\n\n  writer.addInt16(binary ? 1\n  /* BINARY */\n  : 0\n  /* STRING */\n  );\n  return writer.flush(66\n  /* bind */\n  );\n};\n\nvar emptyExecute = Buffer.from([69\n/* execute */\n, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nvar execute = function execute(config) {\n  // this is the happy path for most queries\n  if (!config || !config.portal && !config.rows) {\n    return emptyExecute;\n  }\n\n  var portal = config.portal || '';\n  var rows = config.rows || 0;\n  var portalLength = Buffer.byteLength(portal);\n  var len = 4 + portalLength + 1 + 4; // one extra bit for code\n\n  var buff = Buffer.allocUnsafe(1 + len);\n  buff[0] = 69\n  /* execute */\n  ;\n  buff.writeInt32BE(len, 1);\n  buff.write(portal, 5, 'utf-8');\n  buff[portalLength + 5] = 0; // null terminate portal cString\n\n  buff.writeUInt32BE(rows, buff.length - 4);\n  return buff;\n};\n\nvar cancel = function cancel(processID, secretKey) {\n  var buffer = Buffer.allocUnsafe(16);\n  buffer.writeInt32BE(16, 0);\n  buffer.writeInt16BE(1234, 4);\n  buffer.writeInt16BE(5678, 6);\n  buffer.writeInt32BE(processID, 8);\n  buffer.writeInt32BE(secretKey, 12);\n  return buffer;\n};\n\nvar cstringMessage = function cstringMessage(code, string) {\n  var stringLen = Buffer.byteLength(string);\n  var len = 4 + stringLen + 1; // one extra bit for code\n\n  var buffer = Buffer.allocUnsafe(1 + len);\n  buffer[0] = code;\n  buffer.writeInt32BE(len, 1);\n  buffer.write(string, 5, 'utf-8');\n  buffer[len] = 0; // null terminate cString\n\n  return buffer;\n};\n\nvar emptyDescribePortal = writer.addCString('P').flush(68\n/* describe */\n);\nvar emptyDescribeStatement = writer.addCString('S').flush(68\n/* describe */\n);\n\nvar describe = function describe(msg) {\n  return msg.name ? cstringMessage(68\n  /* describe */\n  , \"\".concat(msg.type).concat(msg.name || '')) : msg.type === 'P' ? emptyDescribePortal : emptyDescribeStatement;\n};\n\nvar close = function close(msg) {\n  var text = \"\".concat(msg.type).concat(msg.name || '');\n  return cstringMessage(67\n  /* close */\n  , text);\n};\n\nvar copyData = function copyData(chunk) {\n  return writer.add(chunk).flush(100\n  /* copyFromChunk */\n  );\n};\n\nvar copyFail = function copyFail(message) {\n  return cstringMessage(102\n  /* copyFail */\n  , message);\n};\n\nvar codeOnlyBuffer = function codeOnlyBuffer(code) {\n  return Buffer.from([code, 0x00, 0x00, 0x00, 0x04]);\n};\n\nvar flushBuffer = codeOnlyBuffer(72\n/* flush */\n);\nvar syncBuffer = codeOnlyBuffer(83\n/* sync */\n);\nvar endBuffer = codeOnlyBuffer(88\n/* end */\n);\nvar copyDoneBuffer = codeOnlyBuffer(99\n/* copyDone */\n);\nvar serialize = {\n  startup: startup,\n  password: password,\n  requestSsl: requestSsl,\n  sendSASLInitialResponseMessage: sendSASLInitialResponseMessage,\n  sendSCRAMClientFinalMessage: sendSCRAMClientFinalMessage,\n  query: query,\n  parse: parse,\n  bind: bind,\n  execute: execute,\n  describe: describe,\n  close: close,\n  flush: function flush() {\n    return flushBuffer;\n  },\n  sync: function sync() {\n    return syncBuffer;\n  },\n  end: function end() {\n    return endBuffer;\n  },\n  copyData: copyData,\n  copyDone: function copyDone() {\n    return copyDoneBuffer;\n  },\n  copyFail: copyFail,\n  cancel: cancel\n};\nexports.serialize = serialize;","map":{"version":3,"mappings":"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","names":["writer","buffer_writer_1","startup","opts","addInt16","Object","keys","key","addCString","bodyBuffer","flush","length","addInt32","add","requestSsl","response","Buffer","allocUnsafe","writeInt32BE","password","sendSASLInitialResponseMessage","mechanism","initialResponse","byteLength","addString","sendSCRAMClientFinalMessage","additionalData","query","text","emptyArray","parse","name","console","error","types","len","buffer","i","paramWriter","writeValues","values","valueMapper","mappedVal","bind","config","portal","statement","binary","emptyExecute","from","execute","rows","portalLength","buff","write","writeUInt32BE","cancel","processID","secretKey","writeInt16BE","cstringMessage","code","string","stringLen","emptyDescribePortal","emptyDescribeStatement","describe","msg","type","close","copyData","chunk","copyFail","message","codeOnlyBuffer","flushBuffer","syncBuffer","endBuffer","copyDoneBuffer","serialize","sync","end","copyDone","exports"],"sourceRoot":"","sources":["../src/serializer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}