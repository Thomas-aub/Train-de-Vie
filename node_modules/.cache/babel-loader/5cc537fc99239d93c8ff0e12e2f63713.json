{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/thomas/Desktop/projet info/projet-rc1/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/thomas/Desktop/projet info/projet-rc1/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BufferReader = void 0;\nvar emptyBuffer = Buffer.allocUnsafe(0);\n\nvar BufferReader = /*#__PURE__*/function () {\n  function BufferReader() {\n    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, BufferReader);\n\n    this.offset = offset;\n    this.buffer = emptyBuffer; // TODO(bmc): support non-utf8 encoding?\n\n    this.encoding = 'utf-8';\n  }\n\n  _createClass(BufferReader, [{\n    key: \"setBuffer\",\n    value: function setBuffer(offset, buffer) {\n      this.offset = offset;\n      this.buffer = buffer;\n    }\n  }, {\n    key: \"int16\",\n    value: function int16() {\n      var result = this.buffer.readInt16BE(this.offset);\n      this.offset += 2;\n      return result;\n    }\n  }, {\n    key: \"byte\",\n    value: function byte() {\n      var result = this.buffer[this.offset];\n      this.offset++;\n      return result;\n    }\n  }, {\n    key: \"int32\",\n    value: function int32() {\n      var result = this.buffer.readInt32BE(this.offset);\n      this.offset += 4;\n      return result;\n    }\n  }, {\n    key: \"string\",\n    value: function string(length) {\n      var result = this.buffer.toString(this.encoding, this.offset, this.offset + length);\n      this.offset += length;\n      return result;\n    }\n  }, {\n    key: \"cstring\",\n    value: function cstring() {\n      var start = this.offset;\n      var end = start;\n\n      while (this.buffer[end++] !== 0) {}\n\n      this.offset = end;\n      return this.buffer.toString(this.encoding, start, end - 1);\n    }\n  }, {\n    key: \"bytes\",\n    value: function bytes(length) {\n      var result = this.buffer.slice(this.offset, this.offset + length);\n      this.offset += length;\n      return result;\n    }\n  }]);\n\n  return BufferReader;\n}();\n\nexports.BufferReader = BufferReader;","map":{"version":3,"mappings":";;;;;;;;;;AAAA,IAAMA,WAAW,GAAGC,MAAM,CAACC,WAAP,CAAmB,CAAnB,CAApB;;IAEaC,Y;EAMX,wBAAsC;IAAA,IAAlBC,MAAkB,uEAAD,CAAC;;IAAA;;IAAlB;IALZ,cAAiBJ,WAAjB,CAK8B,CAHtC;;IACQ,gBAAmB,OAAnB;EAEkC;;;;WAEnC,mBAAUI,MAAV,EAA0BC,MAA1B,EAAwC;MAC7C,KAAKD,MAAL,GAAcA,MAAd;MACA,KAAKC,MAAL,GAAcA,MAAd;IACD;;;WAEM,iBAAK;MACV,IAAMC,MAAM,GAAG,KAAKD,MAAL,CAAYE,WAAZ,CAAwB,KAAKH,MAA7B,CAAf;MACA,KAAKA,MAAL,IAAe,CAAf;MACA,OAAOE,MAAP;IACD;;;WAEM,gBAAI;MACT,IAAMA,MAAM,GAAG,KAAKD,MAAL,CAAY,KAAKD,MAAjB,CAAf;MACA,KAAKA,MAAL;MACA,OAAOE,MAAP;IACD;;;WAEM,iBAAK;MACV,IAAMA,MAAM,GAAG,KAAKD,MAAL,CAAYG,WAAZ,CAAwB,KAAKJ,MAA7B,CAAf;MACA,KAAKA,MAAL,IAAe,CAAf;MACA,OAAOE,MAAP;IACD;;;WAEM,gBAAOG,MAAP,EAAqB;MAC1B,IAAMH,MAAM,GAAG,KAAKD,MAAL,CAAYK,QAAZ,CAAqB,KAAKC,QAA1B,EAAoC,KAAKP,MAAzC,EAAiD,KAAKA,MAAL,GAAcK,MAA/D,CAAf;MACA,KAAKL,MAAL,IAAeK,MAAf;MACA,OAAOH,MAAP;IACD;;;WAEM,mBAAO;MACZ,IAAMM,KAAK,GAAG,KAAKR,MAAnB;MACA,IAAIS,GAAG,GAAGD,KAAV;;MACA,OAAO,KAAKP,MAAL,CAAYQ,GAAG,EAAf,MAAuB,CAA9B,EAAiC,CAAE;;MACnC,KAAKT,MAAL,GAAcS,GAAd;MACA,OAAO,KAAKR,MAAL,CAAYK,QAAZ,CAAqB,KAAKC,QAA1B,EAAoCC,KAApC,EAA2CC,GAAG,GAAG,CAAjD,CAAP;IACD;;;WAEM,eAAMJ,MAAN,EAAoB;MACzB,IAAMH,MAAM,GAAG,KAAKD,MAAL,CAAYS,KAAZ,CAAkB,KAAKV,MAAvB,EAA+B,KAAKA,MAAL,GAAcK,MAA7C,CAAf;MACA,KAAKL,MAAL,IAAeK,MAAf;MACA,OAAOH,MAAP;IACD;;;;;;AAjDHS","names":["emptyBuffer","Buffer","allocUnsafe","BufferReader","offset","buffer","result","readInt16BE","readInt32BE","length","toString","encoding","start","end","slice","exports"],"sourceRoot":"","sources":["../src/buffer-reader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}