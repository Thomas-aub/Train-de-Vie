[{"C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\index.js":"1","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\App.js":"2","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\pages\\index.js":"3","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\pages\\About.js":"4","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\pages\\Maps.js":"5","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\components\\Navbar\\index.js":"6","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\components\\Navbar\\NavbarDesign.js":"7"},{"size":204,"mtime":1668346914098,"results":"8","hashOfConfig":"9"},{"size":582,"mtime":1669738257055,"results":"10","hashOfConfig":"9"},{"size":80435,"mtime":1671200276313,"results":"11","hashOfConfig":"9"},{"size":5556,"mtime":1671114639544,"results":"12","hashOfConfig":"9"},{"size":8092,"mtime":1671180859495,"results":"13","hashOfConfig":"9"},{"size":777,"mtime":1671111946273,"results":"14","hashOfConfig":"9"},{"size":1984,"mtime":1671111927010,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1fgftiw",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\index.js",[],["34","35"],"C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\App.js",[],"C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\pages\\index.js",["36","37"],"C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\pages\\About.js",["38","39","40"],"import React from 'react';\r\nimport \"../style/gradient.css\";\r\n\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"leading-normal tracking-normal text-white gradient\" style={{ margin: \"3%\"}}>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\r\n        {/*Replace with your tailwind.css once created*/}\r\n        <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700\" rel=\"stylesheet\" />\r\n        {/* Define your gradient here - use online tools to find a gradient matching your branding*/}\r\n        \r\n      {/* Boutons */}\r\n      <section className=\"bg-white py-8\">\r\n          <div className=\"container mx-auto flex flex-wrap pt-4 pb-12\">\r\n            <h2 className=\"w-full my-2 text-5xl font-bold leading-tight text-center text-gray-800\">\r\n              Membres du projet\r\n            </h2>\r\n            <div className=\"w-full mb-4\">\r\n              <div className=\"h-1 mx-auto gradient w-64 opacity-25 my-0 py-0 rounded-t\" />\r\n            </div>\r\n            <div className=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\r\n              <div className=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\r\n                <a href=\"#\" className=\"flex flex-wrap no-underline hover:no-underline\">\r\n                  <p className=\"w-full text-gray-600 text-xs md:text-sm px-6\">\r\n                    Front-end \r\n                  </p>\r\n                  <div className=\"w-full font-bold text-xl text-gray-800 px-6\">\r\n                    Yanis Aumasson\r\n                  </div>\r\n                  <p className=\"text-gray-800 text-base px-6 mb-5\">\r\n                  Actuellement en L3 Informatique à Lyon 1, dans ce projet j'ai principalement travaillé sur l'affichage de la carte Leaflet et sur le design du site. J'ai également assisté Thomas lors de certaines de ses tâches.\r\n                  </p>\r\n                </a>\r\n              </div>\r\n              <div className=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\r\n                <div className=\"flex items-center justify-start\">\r\n                  <button className=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\r\n                  <a href=\"http://yanisaumasson.fr\">Website</a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\r\n              <div className=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\r\n                <a href=\"#\" className=\"flex flex-wrap no-underline hover:no-underline\">\r\n                  <p className=\"w-full text-gray-600 text-xs md:text-sm px-6\">\r\n                    Back-end\r\n                  </p>\r\n                  <div className=\"w-full font-bold text-xl text-gray-800 px-6\">\r\n                    Thomas Aubourg\r\n                  </div>\r\n                  <p className=\"text-gray-800 text-base px-6 mb-5\">\r\n                    Etudiant en informatique à l'université Lyon 1. J'ai été principalement en charge de la back-end dur projet, majoritairement sur python mais aussi un peu en React.js.\r\n                  </p>\r\n                </a>\r\n              </div>\r\n              <div className=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\r\n                <div className=\"flex items-center justify-center\">\r\n                  <button className=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\r\n                  <a href=\"https://github.com/Thomas-aub\">GitHub</a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\r\n              <div className=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\r\n                <a href=\"#\" className=\"flex flex-wrap no-underline hover:no-underline\">\r\n                  <p className=\"w-full text-gray-600 text-xs md:text-sm px-6\">\r\n                    Database\r\n                  </p>\r\n                  <div className=\"w-full font-bold text-xl text-gray-800 px-6\">\r\n                    Guillaume Fiquemo\r\n                  </div>\r\n                  <p className=\"text-gray-800 text-base px-6 mb-5\">\r\n                    Etudiant en informatique à l'université Lyon 1. Ma mission principale a été de faire la liaison entre la page web et la base de données avec Node.Js\r\n                  </p>\r\n                </a>\r\n              </div>\r\n              <div className=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\r\n                <div className=\"flex items-center justify-end\">\r\n                  <button className=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\r\n                    <a href=\"https://www.youtube.com/@TeletubbiesFrancais\">Youtube</a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        \r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default About;","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\pages\\Maps.js",["41","42"],"import { MapContainer, useMap, useMapEvents , TileLayer, Marker, Popup} from 'react-leaflet';\r\n// import { Control } from 'react-leaflet-control';\r\nimport { Icon } from 'leaflet';\r\n\r\n\r\nimport React, {useState, useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\nimport dataGares from \"../data/referentiel-gares-voyageurs.json\";\r\nimport \"leaflet-geosearch/dist/geosearch.css\";\r\nimport { GeoSearchControl, OpenStreetMapProvider } from \"leaflet-geosearch\";\r\nimport marker1 from '../images/train.png';\r\nimport marker2 from '../images/marker.svg';\r\n\r\nimport rouge from '../images/rond_rouge.png';\r\nimport orange1 from '../images/rond_orange_1.png';\r\nimport orange2 from '../images/rond_orange_2.png';\r\nimport jaune1 from '../images/rond_jaune.png';\r\nimport jaune2 from '../images/rond_jaune_2.png';\r\n\r\n\r\n\r\n\r\n//CSS\r\nimport \"leaflet-easybutton/src/easy-button.js\";\r\nimport \"leaflet-easybutton/src/easy-button.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nlet tmp = 1;\r\nlet jsonData;\r\nlet hashmapGare = new Map();\r\nlet filter = [];\r\nconst RangeSlider = () => {\r\n\r\n  const [rangeval, setRangeval] = useState(null);\r\n  tmp = rangeval * 60;\r\n\r\n  if(rangeval == null) {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <input id=\"slider\" type=\"range\" className=\"custom-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\"\r\n         onChange={(event) => setRangeval(event.target.value)} />\r\n        <h4>Temps : {rangeval}</h4>\r\n      </div>\r\n      )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <input id=\"slider\" type=\"range\" className=\"custom-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\"\r\n         onChange={(event) => setRangeval(event.target.value)} />\r\n        <h4>Temps : {rangeval} heure(s)</h4>\r\n      </div>\r\n      )\r\n  }\r\n};\r\n\r\nconst iconBasic = new Icon({\r\n iconUrl: marker1,\r\n iconSize: [32,32],\r\n});\r\n\r\nconst iconLocation = new Icon({\r\n  iconUrl: marker2,\r\n  iconSize: [32,32]\r\n });\r\n\r\n\r\n const iconRouge = new Icon({\r\n  iconUrl: rouge,\r\n  iconSize: [16,16],\r\n });\r\n\r\n const iconOrange1 = new Icon({\r\n  iconUrl: orange1,\r\n  iconSize: [16,16]\r\n });\r\n\r\n const iconOrange2 = new Icon({\r\n  iconUrl: orange2,\r\n  iconSize: [16,16]\r\n });\r\n\r\n const iconJaune1 = new Icon({\r\n  iconUrl: jaune1,\r\n  iconSize: [16,16]\r\n });\r\n\r\n const iconJaune2 = new Icon({\r\n  iconUrl: jaune2,\r\n  iconSize: [16,16]\r\n });\r\n\r\n\r\n\r\nconst center = [47.145642247997316, 2.793386115987655];\r\n\r\nconst filterGare1 = dataGares.filter(\r\n  (gare) => gare.fields.segmentdrg_libelle === \"a\"\r\n);\r\n\r\nconst filterGare2 = dataGares.filter(\r\n  (gare) =>\r\n    (gare.fields.segmentdrg_libelle === \"a\" ||\r\n    gare.fields.segmentdrg_libelle === \"b\") &&\r\n    gare.fields.longitude_entreeprincipale_wgs84 !== undefined\r\n);\r\n\r\nconst filterGare3 = dataGares.filter(\r\n  (gare) =>\r\n    (gare.fields.segmentdrg_libelle === \"a\" ||\r\n    gare.fields.segmentdrg_libelle === \"b\" ||\r\n    gare.fields.segmentdrg_libelle === \"c\") &&\r\n    gare.fields.longitude_entreeprincipale_wgs84 !== undefined\r\n);\r\n\r\n\r\nasync function getGareUser(gare, forceUpdate) {\r\n  try {\r\n    if (tmp === 0){\r\n      tmp = 60;\r\n    }\r\n    hashmapGare = new Map();\r\n    const response = await fetch(`http://localhost:5000/train/${gare}/${tmp}`);\r\n    jsonData = await response.json();\r\n    console.log(jsonData);\r\n    for (const e of jsonData) {\r\n      hashmapGare.set(e.goal.toString(), e.time)\r\n    }\r\n    \r\n} catch (err){\r\n    console.error(err.message);\r\n} \r\n  forceUpdate();\r\n  return null;\r\n}\r\n\r\n\r\n\r\nfunction marker (filt, forceUpdate){\r\n  const map = filt.map(e => (\r\n    <Marker\r\n      key={e.fields.uic_code}\r\n      position={[e.fields.latitude_entreeprincipale_wgs84, e.fields.longitude_entreeprincipale_wgs84]}\r\n      icon = {iconBasic} \r\n      >\r\n      <Popup>\r\n        <h3> {\"Gare : \" + e.fields.gare_alias_libelle_noncontraint} </h3>\r\n        <RangeSlider></RangeSlider>\r\n        <button onClick={() => getGareUser(e.fields.uic_code.slice(-8), forceUpdate)}> Valider </button>\r\n      </Popup>\r\n  </Marker>\r\n  ));\r\n\r\n  return map;\r\n}\r\n\r\nfunction markerRecherche(forceUpdate){\r\n  for (const it of dataGares) {\r\n    if (hashmapGare.has(it.fields.uic_code.slice(-8).toString()) && it.fields.longitude_entreeprincipale_wgs84 !== undefined){\r\n      filter.push(it);\r\n    }\r\n  }\r\n  const mapR = filter.map(e => (\r\n    <Marker\r\n      key={e.fields.uic_code}\r\n      position={[e.fields.latitude_entreeprincipale_wgs84, e.fields.longitude_entreeprincipale_wgs84]}\r\n      opacity = {0.5}\r\n      icon = {getMarkerIcon(e.fields.uic_code)}\r\n    >\r\n      <Popup>\r\n        <h3> {\"Gare : \" + e.fields.gare_alias_libelle_noncontraint} </h3>\r\n        <RangeSlider></RangeSlider>\r\n        <button onClick={() => getGareUser(e.fields.uic_code.slice(-8), forceUpdate)}> Valider </button>\r\n      </Popup>\r\n    </Marker>\r\n  ));\r\n  filter = [];\r\n  return mapR;\r\n}\r\n\r\nfunction getMarkerIcon(e){\r\n  if(hashmapGare.get(e.slice(-8)) < (tmp/5)){\r\n    return iconRouge;\r\n  } else if(hashmapGare.get(e.slice(-8)) < (tmp*2/5)) {\r\n    return iconOrange1;\r\n  } else if(hashmapGare.get(e.slice(-8)) < (tmp*3/5)) {\r\n    return iconOrange2;\r\n  }else if(hashmapGare.get(e.slice(-8)) < (tmp*4/5)) {\r\n    return iconJaune1;\r\n  } else {\r\n    return iconJaune2;\r\n  }\r\n}\r\n\r\nconst ZoomTracker = ({ setZoom }) => {\r\n  const map = useMapEvents({\r\n    zoom(){\r\n      setZoom(map.getZoom())\r\n    }\r\n  })\r\n  return null\r\n}\r\n\r\nconst ZoomControlledLayer = ({ zoom , forceUpdate }) => {\r\n  let ret = null;\r\n  if( hashmapGare.size === 0){\r\n    if (zoom <= 9){\r\n      console.log(\"niveau 1\");\r\n      ret = marker(filterGare1, forceUpdate );\r\n    } else if (zoom >= 10 && zoom <= 12){\r\n      console.log(\"niveau 2\");\r\n      ret = marker(filterGare2, forceUpdate);\r\n    }else if (zoom >= 13){\r\n      console.log(\"niveau 3\");\r\n      ret = marker(filterGare3, forceUpdate);\r\n    } else{\r\n      console.log(\"Aucun niveau\");\r\n      ret = marker(filterGare1, forceUpdate);\r\n    }\r\n  } else {\r\n    ret = markerRecherche(forceUpdate);\r\n  }\r\n  return (ret);\r\n}\r\n\r\nfunction LeafletgeoSearch() {\r\n  const map = useMap(); //here use useMap hook\r\n\r\n  useEffect(() => {\r\n\r\n    const provider = new OpenStreetMapProvider({\r\n      params: {\r\n      'accept-language': 'fr', // Nom des villes en français\r\n      countrycodes: 'fr', // Limite les recherches à la France seulement\r\n    },\r\n  });\r\n\r\n    const searchControl = new GeoSearchControl({\r\n      notFoundMessage: 'Désolé, cette adresse est introuvable.',\r\n      provider,\r\n      marker: {icon : iconLocation}\r\n    });\r\n\r\n    map.addControl(searchControl);\r\n\r\n    return () => map.removeControl(searchControl)\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\n\r\nexport default function Maps(){\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [position, setPosition] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    L.easyButton(\"fa-map-marker\", () => {\r\n      map.locate().on(\"locationfound\", function (e) {\r\n        setPosition(e.latlng);\r\n        map.flyTo(e.latlng, 14);\r\n      });\r\n    }).addTo(map);\r\n  }, [map]);\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    L.easyButton('fa fa-refresh', () => {\r\n      window.location.reload();\r\n    }).addTo(map);\r\n  }, [map]);\r\n\r\n\r\n  const [zoom, setZoom] = useState()\r\n\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  return (\r\n    <>\r\n    <MapContainer \r\n    center={center}\r\n    className =\"map\"\r\n    zoom={6}\r\n    whenCreated={setMap}\r\n    style={{ height: \"88.6vh\" }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://api.maptiler.com/maps/basic/256/{z}/{x}/{y}.png?key=F4ZxF5g8ioWE3GlTx3i0#-0.2/0.00000/76.51878\"\r\n        attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n      />\r\n      <ZoomTracker setZoom={setZoom} />\r\n      <ZoomControlledLayer zoom={zoom} forceUpdate={forceUpdate}>\r\n      </ZoomControlledLayer>\r\n      <LeafletgeoSearch provider={new OpenStreetMapProvider()} />\r\n    </MapContainer>\r\n    </>\r\n  )\r\n\r\n}","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\components\\Navbar\\index.js",["43","44","45"],"\r\nimport React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink,\r\n} from './NavbarDesign';\r\n\r\nimport logo from '../../images/logo_blanc.png'; \r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Bars />\r\n\r\n        <img src={logo} style={{\r\n        height: '200%',\r\n        marginTop: '-35px',\r\n        marginLeft: '-250px'\r\n      }} />\r\n        \r\n\r\n        <NavMenu>\r\n\r\n        \r\n\r\n          <NavLink to='/home'>\r\n            ACCUEIL\r\n          </NavLink>\r\n          <NavLink to='/carte'>\r\n            CARTE\r\n          </NavLink>\r\n          <NavLink to='/infos'>\r\n            INFORMATIONS\r\n          </NavLink>\r\n          \r\n        </NavMenu>\r\n        \r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\thomas\\Desktop\\projet info\\projet-rc1\\src\\components\\Navbar\\NavbarDesign.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":41,"column":15,"nodeType":"52","endLine":41,"endColumn":93},{"ruleId":"50","severity":1,"message":"51","line":168,"column":17,"nodeType":"52","endLine":168,"endColumn":38},{"ruleId":"53","severity":1,"message":"54","line":24,"column":17,"nodeType":"52","endLine":24,"endColumn":88},{"ruleId":"53","severity":1,"message":"54","line":46,"column":17,"nodeType":"52","endLine":46,"endColumn":88},{"ruleId":"53","severity":1,"message":"54","line":68,"column":17,"nodeType":"52","endLine":68,"endColumn":88},{"ruleId":"55","severity":1,"message":"56","line":248,"column":6,"nodeType":"57","endLine":248,"endColumn":8,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":257,"column":10,"nodeType":"61","messageId":"62","endLine":257,"endColumn":18},{"ruleId":"59","severity":1,"message":"63","line":8,"column":3,"nodeType":"61","messageId":"62","endLine":8,"endColumn":9},{"ruleId":"59","severity":1,"message":"64","line":9,"column":3,"nodeType":"61","messageId":"62","endLine":9,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":23,"column":9,"nodeType":"52","endLine":27,"endColumn":12},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-unused-vars","'position' is assigned a value but never used.","Identifier","unusedVar","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [map]",{"range":"70","text":"71"},[6597,6599],"[map]"]